#include <iostream>
#include <stdlib.h>																						//Needed for exit() function. Am I allowed to add this?
using namespace std;

struct TheData {
	double* Values;  // holds the data to be filtered
	unsigned long Length;  // number of data values
	bool Valid;   // true if the data values have been obtained
};

struct TheFilter {
	double* Values; // the filter values
	unsigned long Length; // number of filter values
	bool Valid; // true if the filter values have been obtained
};

void EnterData(TheData* OriginalData);
void EnterFilter(TheFilter* Filter);
void ApplyFilter(TheData* OriginalData,TheData* FilteredData, TheFilter* Filter);

int main()
{

	// define the original data and its initial values
	TheData OriginalData = { 0,0,false };
	TheFilter Filter = { 0,0,false };
	TheData FilteredData = { 0,0,false };


	EnterData(&OriginalData);
	EnterFilter(&Filter);

	cout << "INT MAIN - " << endl << OriginalData.Length << endl;
	cout << Filter.Length << endl;
	cout << FilteredData.Length << endl;

	ApplyFilter(&OriginalData, &FilteredData, &Filter);

		return 0;
}

void EnterData(TheData* OriginalData)
{
	// initialize the data structure
	cout << "How many data values would you like to enter? ";
	cin >> OriginalData->Length;

	// allocate memory to the data
	OriginalData->Values = new double[OriginalData->Length];
	if (OriginalData->Values == 0) {
		cerr << "\n*** Unable to allocate memory **\n";
		exit(1);
	}
	else {
		cout << "Please input the data values one at a time:" << endl;
		for (unsigned int i = 0; i < OriginalData->Length; i++) {
			cin >> OriginalData->Values[i];
		}
		cout << "Data array completed." << endl << "You have entered the following array: ";
			for (unsigned int i = 0; i < OriginalData->Length; i++) {
				cout << OriginalData->Values[i] << ", ";
			}
			cout << endl;
			cout << "The length of you array is " << OriginalData->Length << endl;
	}
}
 
void EnterFilter(TheFilter* Filter)
{
	// initialize the data structure
	cout << "How many filter values would you like to enter ? ";
	cin >> Filter->Length;

	// allocate memory to the filter values
	Filter->Values = new double[Filter->Length];
	if (Filter->Values == 0) {
		cerr << "\n*** Unable to allocate memory **\n";
		exit(1);
	}
	else { 
		cout << "Please input the filter values one at a time:" << endl;
		for (unsigned int i = 0; i < Filter->Length; i++) {
			cin >> Filter->Values[i];
		}
		cout << "Filter array completed." << endl << "You have entered the following array: ";
		for (unsigned int i = 0; i < Filter->Length; i++) {
			cout << Filter->Values[i] << ", ";
		}
		cout << endl;
		cout << "The length of your filter array is " << Filter->Length << endl;
	}
}

void ApplyFilter(TheData* OriginalData, TheData* FilteredData, TheFilter* Filter)
{
	cout << "ApplyFilter - " <<  OriginalData->Length << endl;
	cout << Filter->Length << endl;
	cout << FilteredData->Length << endl;
	cout << "Reached Apply Filter." << endl;

	// initialize the data structure that holds the filtered data
	FilteredData->Length = (OriginalData->Length - Filter->Length) + 1;

	cout << "Initialized Filtered Data Length." << endl;

	// get memory for the filtered data
	FilteredData->Values = new double[FilteredData->Length];

	cout << "Got memory." << endl;

	if (FilteredData->Values == 0) {
		cerr << "\n*** Unable to allocate memory **\n";
		cout << "Unable to allocate memory." << endl;
		exit(1);
	}
	else {
		cout << "else - " << OriginalData->Length << endl;
		cout << Filter->Length << endl;
		cout << FilteredData->Length << endl;
	}
}
